type Host {
  id: Int!
  name: String!
  ipAddress: String!
  exhibitor: Exhibitor
  exhibit: Exhibit
  cpu: String
  os: String
  services: [WellKnownService!]
}

enum WellKnownService {
  http
  https
  ftp
  ssh
  telnet
}

extend type Exhibitor {
  hosts: [Host!]!
}

extend type Exhibit {
  host: Host
}

input HostInput {
  ipAddress: String
  exhibitorId: Int
  exhibitId: Int
  cpu: String
  os: String
  services: [WellKnownService!]
}

extend type Query {
  getHost(name: String): Host
  getHosts: [Host!]
}

extend type Mutation {
  addHost(name: String!, input: HostInput!): Host!
  updateHost(name: String!, input: HostInput!): Host!
  deleteHost(name: String!): Boolean!
}
