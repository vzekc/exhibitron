scalar JSON

type Registration {
  email: String!
  id: Int!
  message: String
  name: String!
  nickname: String
  notes: String
  status: RegistrationStatus!
  topic: String!
  data: JSON
}

input CreateRegistrationInput {
  email: String!
  message: String
  name: String!
  nickname: String!
  topic: String!
  data: JSON!
}

input UpdateRegistrationInput {
  status: RegistrationStatus
  notes: String
}

extend type Mutation {
  approveRegistration(id: Int!, siteUrl: String!): Boolean
  createRegistration(input: CreateRegistrationInput!): Registration
  deleteRegistration(id: Int!): Boolean
  rejectRegistration(id: Int!): Boolean
  updateRegistration(input: UpdateRegistrationInput!): Registration
}

extend type Query {
  getRegistration(id: Int!): Registration
  getRegistrations: [Registration!]
}

enum RegistrationStatus {
  approved
  inProgress
  new
  rejected
}
