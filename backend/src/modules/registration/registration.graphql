scalar JSON
scalar Date

type Registration {
  createdAt: Date!
  updatedAt: Date
  email: String!
  id: Int!
  message: String
  name: String!
  nickname: String
  notes: String
  status: RegistrationStatus!
  topic: String!
  data: JSON
}

input RegisterInput {
  email: String!
  message: String
  name: String!
  nickname: String!
  topic: String!
  data: JSON!
}

extend type Mutation {
  register(input: RegisterInput!): Registration
  setRegistrationInProgress(id: Int!): Boolean
  updateRegistrationNotes(id: Int!, notes: String!): Registration
  approveRegistration(id: Int!, siteUrl: String!): Boolean
  rejectRegistration(id: Int!): Boolean
  deleteRegistration(id: Int!): Boolean
}

extend type Query {
  getRegistration(id: Int!): Registration
  getRegistrations: [Registration!]
}

enum RegistrationStatus {
  approved
  inProgress
  new
  rejected
}
