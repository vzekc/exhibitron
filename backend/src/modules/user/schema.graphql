type Contacts {
  email: String
  mastodon: String
  phone: String
  website: String
}

input ContactsInput {
  email: String
  mastodon: String
  phone: String
  website: String
}

type User {
  bio: String
  contacts: Contacts
  email: String!
  fullName: String!
  id: Int!
  isAdministrator: Boolean
  nickname: String
}

input UpdateUserProfileInput {
  fullName: String
  bio: String
  contacts: ContactsInput
  nickname: String
}

extend type Mutation {
  login(email: String!, password: String!): User
  logout: Boolean
  requestPasswordReset(email: String!, resetUrl: String!): Boolean
  resetPassword(password: String!, token: String!): Boolean
  updateUserProfile(input: UpdateUserProfileInput!): User
}

extend type Query {
  getUser(id: Int!): User
  getUserByEmail(email: String!): User
  getCurrentUser: User
  getUsers: [User!]
  getTokenEmail(token: String!): String
}
